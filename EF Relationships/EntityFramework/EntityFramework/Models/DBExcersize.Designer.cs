//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DBExcersizeModel", "fk_courseteacher_tid", "Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EntityFramework.Models.Teacher), "Courses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFramework.Models.Cours), true)]
[assembly: EdmRelationshipAttribute("DBExcersizeModel", "fk_studentstandard_sid", "Standard", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EntityFramework.Models.Standard), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFramework.Models.Student), true)]
[assembly: EdmRelationshipAttribute("DBExcersizeModel", "fk_teacherstandard_sid", "Standard", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EntityFramework.Models.Standard), "Teacher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFramework.Models.Teacher), true)]
[assembly: EdmRelationshipAttribute("DBExcersizeModel", "StudentCourse", "Courses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFramework.Models.Cours), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFramework.Models.Student))]

#endregion

namespace EntityFramework.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DBExcersizeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DBExcersizeEntities object using the connection string found in the 'DBExcersizeEntities' section of the application configuration file.
        /// </summary>
        public DBExcersizeEntities() : base("name=DBExcersizeEntities", "DBExcersizeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBExcersizeEntities object.
        /// </summary>
        public DBExcersizeEntities(string connectionString) : base(connectionString, "DBExcersizeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBExcersizeEntities object.
        /// </summary>
        public DBExcersizeEntities(EntityConnection connection) : base(connection, "DBExcersizeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cours> Courses
        {
            get
            {
                if ((_Courses == null))
                {
                    _Courses = base.CreateObjectSet<Cours>("Courses");
                }
                return _Courses;
            }
        }
        private ObjectSet<Cours> _Courses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Standard> Standards
        {
            get
            {
                if ((_Standards == null))
                {
                    _Standards = base.CreateObjectSet<Standard>("Standards");
                }
                return _Standards;
            }
        }
        private ObjectSet<Standard> _Standards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Teacher> Teachers
        {
            get
            {
                if ((_Teachers == null))
                {
                    _Teachers = base.CreateObjectSet<Teacher>("Teachers");
                }
                return _Teachers;
            }
        }
        private ObjectSet<Teacher> _Teachers;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Courses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCourses(Cours cours)
        {
            base.AddObject("Courses", cours);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Standards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStandards(Standard standard)
        {
            base.AddObject("Standards", standard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teachers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeachers(Teacher teacher)
        {
            base.AddObject("Teachers", teacher);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBExcersizeModel", Name="Cours")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cours : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cours object.
        /// </summary>
        /// <param name="courseId">Initial value of the CourseId property.</param>
        public static Cours CreateCours(global::System.Int32 courseId)
        {
            Cours cours = new Cours();
            cours.CourseId = courseId;
            return cours;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseId
        {
            get
            {
                return _CourseId;
            }
            set
            {
                if (_CourseId != value)
                {
                    OnCourseIdChanging(value);
                    ReportPropertyChanging("CourseId");
                    _CourseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CourseId");
                    OnCourseIdChanged();
                }
            }
        }
        private global::System.Int32 _CourseId;
        partial void OnCourseIdChanging(global::System.Int32 value);
        partial void OnCourseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CourseName
        {
            get
            {
                return _CourseName;
            }
            set
            {
                OnCourseNameChanging(value);
                ReportPropertyChanging("CourseName");
                _CourseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CourseName");
                OnCourseNameChanged();
            }
        }
        private global::System.String _CourseName;
        partial void OnCourseNameChanging(global::System.String value);
        partial void OnCourseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TeacherId
        {
            get
            {
                return _TeacherId;
            }
            set
            {
                OnTeacherIdChanging(value);
                ReportPropertyChanging("TeacherId");
                _TeacherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeacherId");
                OnTeacherIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TeacherId;
        partial void OnTeacherIdChanging(Nullable<global::System.Int32> value);
        partial void OnTeacherIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBExcersizeModel", "fk_courseteacher_tid", "Teacher")]
        public Teacher Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("DBExcersizeModel.fk_courseteacher_tid", "Teacher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("DBExcersizeModel.fk_courseteacher_tid", "Teacher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teacher> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teacher>("DBExcersizeModel.fk_courseteacher_tid", "Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teacher>("DBExcersizeModel.fk_courseteacher_tid", "Teacher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBExcersizeModel", "StudentCourse", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("DBExcersizeModel.StudentCourse", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("DBExcersizeModel.StudentCourse", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBExcersizeModel", Name="Standard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Standard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Standard object.
        /// </summary>
        /// <param name="standardId">Initial value of the StandardId property.</param>
        public static Standard CreateStandard(global::System.Int32 standardId)
        {
            Standard standard = new Standard();
            standard.StandardId = standardId;
            return standard;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StandardId
        {
            get
            {
                return _StandardId;
            }
            set
            {
                if (_StandardId != value)
                {
                    OnStandardIdChanging(value);
                    ReportPropertyChanging("StandardId");
                    _StandardId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StandardId");
                    OnStandardIdChanged();
                }
            }
        }
        private global::System.Int32 _StandardId;
        partial void OnStandardIdChanging(global::System.Int32 value);
        partial void OnStandardIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StandardName
        {
            get
            {
                return _StandardName;
            }
            set
            {
                OnStandardNameChanging(value);
                ReportPropertyChanging("StandardName");
                _StandardName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StandardName");
                OnStandardNameChanged();
            }
        }
        private global::System.String _StandardName;
        partial void OnStandardNameChanging(global::System.String value);
        partial void OnStandardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBExcersizeModel", "fk_studentstandard_sid", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("DBExcersizeModel.fk_studentstandard_sid", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("DBExcersizeModel.fk_studentstandard_sid", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBExcersizeModel", "fk_teacherstandard_sid", "Teacher")]
        public EntityCollection<Teacher> Teachers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Teacher>("DBExcersizeModel.fk_teacherstandard_sid", "Teacher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Teacher>("DBExcersizeModel.fk_teacherstandard_sid", "Teacher", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBExcersizeModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="studentId">Initial value of the StudentId property.</param>
        public static Student CreateStudent(global::System.Int32 studentId)
        {
            Student student = new Student();
            student.StudentId = studentId;
            return student;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentId
        {
            get
            {
                return _StudentId;
            }
            set
            {
                if (_StudentId != value)
                {
                    OnStudentIdChanging(value);
                    ReportPropertyChanging("StudentId");
                    _StudentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentId");
                    OnStudentIdChanged();
                }
            }
        }
        private global::System.Int32 _StudentId;
        partial void OnStudentIdChanging(global::System.Int32 value);
        partial void OnStudentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudentName
        {
            get
            {
                return _StudentName;
            }
            set
            {
                OnStudentNameChanging(value);
                ReportPropertyChanging("StudentName");
                _StudentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudentName");
                OnStudentNameChanged();
            }
        }
        private global::System.String _StudentName;
        partial void OnStudentNameChanging(global::System.String value);
        partial void OnStudentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StandardId
        {
            get
            {
                return _StandardId;
            }
            set
            {
                OnStandardIdChanging(value);
                ReportPropertyChanging("StandardId");
                _StandardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardId");
                OnStandardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StandardId;
        partial void OnStandardIdChanging(Nullable<global::System.Int32> value);
        partial void OnStandardIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBExcersizeModel", "fk_studentstandard_sid", "Standard")]
        public Standard Standard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("DBExcersizeModel.fk_studentstandard_sid", "Standard").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("DBExcersizeModel.fk_studentstandard_sid", "Standard").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Standard> StandardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("DBExcersizeModel.fk_studentstandard_sid", "Standard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Standard>("DBExcersizeModel.fk_studentstandard_sid", "Standard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBExcersizeModel", "StudentCourse", "Courses")]
        public EntityCollection<Cours> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cours>("DBExcersizeModel.StudentCourse", "Courses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cours>("DBExcersizeModel.StudentCourse", "Courses", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBExcersizeModel", Name="Teacher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Teacher : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Teacher object.
        /// </summary>
        /// <param name="teacherId">Initial value of the TeacherId property.</param>
        public static Teacher CreateTeacher(global::System.Int32 teacherId)
        {
            Teacher teacher = new Teacher();
            teacher.TeacherId = teacherId;
            return teacher;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeacherId
        {
            get
            {
                return _TeacherId;
            }
            set
            {
                if (_TeacherId != value)
                {
                    OnTeacherIdChanging(value);
                    ReportPropertyChanging("TeacherId");
                    _TeacherId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeacherId");
                    OnTeacherIdChanged();
                }
            }
        }
        private global::System.Int32 _TeacherId;
        partial void OnTeacherIdChanging(global::System.Int32 value);
        partial void OnTeacherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TeacherName
        {
            get
            {
                return _TeacherName;
            }
            set
            {
                OnTeacherNameChanging(value);
                ReportPropertyChanging("TeacherName");
                _TeacherName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TeacherName");
                OnTeacherNameChanged();
            }
        }
        private global::System.String _TeacherName;
        partial void OnTeacherNameChanging(global::System.String value);
        partial void OnTeacherNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StandardId
        {
            get
            {
                return _StandardId;
            }
            set
            {
                OnStandardIdChanging(value);
                ReportPropertyChanging("StandardId");
                _StandardId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StandardId");
                OnStandardIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StandardId;
        partial void OnStandardIdChanging(Nullable<global::System.Int32> value);
        partial void OnStandardIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBExcersizeModel", "fk_courseteacher_tid", "Courses")]
        public EntityCollection<Cours> Courses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cours>("DBExcersizeModel.fk_courseteacher_tid", "Courses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cours>("DBExcersizeModel.fk_courseteacher_tid", "Courses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBExcersizeModel", "fk_teacherstandard_sid", "Standard")]
        public Standard Standard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("DBExcersizeModel.fk_teacherstandard_sid", "Standard").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("DBExcersizeModel.fk_teacherstandard_sid", "Standard").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Standard> StandardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Standard>("DBExcersizeModel.fk_teacherstandard_sid", "Standard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Standard>("DBExcersizeModel.fk_teacherstandard_sid", "Standard", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
